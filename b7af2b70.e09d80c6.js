(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{137:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),o=(n(0),n(176)),c=n(182),i=n(183),s={id:"testing_java",title:"Pre-deployment tests and reports",sidebar_label:"Pre-deployment tests and reports"},l={unversionedId:"workloads/azure/backend/java/testing_java",id:"workloads/azure/backend/java/testing_java",isDocsHomePage:!1,title:"Pre-deployment tests and reports",description:"Running the tests",source:"@site/docs/workloads/azure/backend/java/testing_java.md",slug:"/workloads/azure/backend/java/testing_java",permalink:"/stacks/docs/workloads/azure/backend/java/testing_java",version:"current",sidebar_label:"Pre-deployment tests and reports",sidebar:"docs",previous:{title:"Java REST API - Azure DevOps Pipeline",permalink:"/stacks/docs/workloads/azure/backend/java/pipeline_java"},next:{title:"Running API tests with Serenity",permalink:"/stacks/docs/workloads/azure/backend/java/execute_serenity_api_tests"}},u=[{value:"Running the tests",id:"running-the-tests",children:[]},{value:"Reports",id:"reports",children:[{value:"Test reports",id:"test-reports",children:[]},{value:"Code coverage report",id:"code-coverage-report",children:[]},{value:"Dependency checker report",id:"dependency-checker-report",children:[]},{value:"Optional: Mutation testing",id:"optional-mutation-testing",children:[]}]}],b={rightToc:u};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"running-the-tests"},"Running the tests"),Object(o.b)("p",null,"Tests within the code are grouped using Tag annotations. There are three groups: 'Unit', 'Component' and 'Integration'. To just run the unit tests, for example, type:"),Object(o.b)(c.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"unix",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'./mvnw test -Dgroups="Unit"\n'))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'mvnw.cmd test -Dgroups="Unit"\n')))),Object(o.b)("p",null,"Similarly, for the Component tests, you should use:"),Object(o.b)(c.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"unix",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'./mvnw test -Dgroups="Component"\n'))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'mvnw.cmd test -Dgroups="Component"\n')))),Object(o.b)("p",null,"and the equivalent for running the Integration tests."),Object(o.b)("h2",{id:"reports"},"Reports"),Object(o.b)("h3",{id:"test-reports"},"Test reports"),Object(o.b)("p",null,"A test report may be created from the ",Object(o.b)("inlineCode",{parentName:"p"},"test")," package in Java using the Surefire Plugin.\nThe report file (as either XML or HTML) generated for each of the test classes can be found under ",Object(o.b)("inlineCode",{parentName:"p"},"./target/surefire-reports"),"."),Object(o.b)("p",null,"Run the following command to create the report:"),Object(o.b)(c.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"unix",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw surefire:test\n"))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd surefire:test\n")))),Object(o.b)("p",null,"To generate the Serenity report:"),Object(o.b)(c.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"unix",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw clean verify\n"))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd clean verify\n")))),Object(o.b)("p",null,"The report can be viewed under ",Object(o.b)("inlineCode",{parentName:"p"},"./api-tests/target/site/serenity/index.html"),"."),Object(o.b)("h3",{id:"code-coverage-report"},"Code coverage report"),Object(o.b)("p",null,"The JaCoCo Code Coverage tool allows identifying how much of the code is run during the test suite execution. It is by no means an identifier of code and test quality in its own right but can be helpful for checking if logic paths have test coverage, especially for code updates.\nThis library is run in the API pipeline, with output reports being made available to the CI tool being used."),Object(o.b)("p",null,"To generate the JaCoCo report, please execute the following command:"),Object(o.b)(c.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"unix",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw jacoco:report\n"))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd jacoco:report\n")))),Object(o.b)("p",null,"The generated report can be viewed under ",Object(o.b)("inlineCode",{parentName:"p"},"./target/site/jacoco/index.html"),"."),Object(o.b)("h3",{id:"dependency-checker-report"},"Dependency checker report"),Object(o.b)("p",null,"The The ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://owasp.org/www-project-dependency-check/"}),"OWASP Dependency-Check")," is a Software Composition Analysis tool that attempts to detect publicly disclosed vulnerabilities contained within a project\u2019s dependencies.\nDependency-check has a command line interface, a Maven plugin, an Ant task, and a Jenkins plugin. The core engine contains a series of analyzers that inspect the project dependencies, collect pieces of information about the dependencies (referred to as evidence within the tool).\nTo generate the dependency checker report please execute:"),Object(o.b)(c.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"unix",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw clean install -Powasp-dependency-check\n"))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd clean install -Powasp-dependency-check\n")))),Object(o.b)("p",null,"The generated report can be viewed under - ",Object(o.b)("inlineCode",{parentName:"p"},"./target/dependency-check.html"),"."),Object(o.b)("h3",{id:"optional-mutation-testing"},"Optional: Mutation testing"),Object(o.b)("p",null,"PIT mutation testing is used to generate mutation tests (see ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://pitest.org/"}),"https://pitest.org/")," for details).\nThe mutation coverage goal analyses all classes in the codebase that match the target tests and target class filters.\nTo run it:"),Object(o.b)(c.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"unix",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw org.pitest:pitest-maven:mutationCoverage\n"))),Object(o.b)(i.a,{value:"windows",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd org.pitest:pitest-maven:mutationCoverage\n")))),Object(o.b)("p",null,"The generated report can be viewed under \u2013 ",Object(o.b)("inlineCode",{parentName:"p"},"./target/pit-reports/YYYYMMDDHHMI"),"."))}p.isMDXComponent=!0},176:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(n),d=a,m=b["".concat(c,".").concat(d)]||b[d]||p[d]||o;return n?r.a.createElement(m,i(i({ref:t},l),{},{components:n})):r.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},177:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},179:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},180:function(e,t,n){"use strict";var a=n(0),r=n(179);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},182:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(180),c=n(177),i=n(50),s=n.n(i),l=37,u=39;t.a=function(e){var t=e.block,n=e.children,i=e.defaultValue,b=e.values,p=e.groupId,d=Object(o.a)(),m=d.tabGroupChoices,v=d.setTabGroupChoices,g=Object(a.useState)(i),j=g[0],f=g[1],O=Object(a.useState)(!1),h=O[0],y=O[1];if(null!=p){var w=m[p];null!=w&&w!==j&&b.some((function(e){return e.value===w}))&&f(w)}var T=function(e){f(e),null!=p&&v(p,e)},x=[],k=function(e){e.metaKey||e.altKey||e.ctrlKey||y(!0)},N=function(){y(!1)};return Object(a.useEffect)((function(){window.addEventListener("keydown",k),window.addEventListener("mousedown",N)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":t})},b.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(c.a)("tabs__item",s.a.tabItem,{"tabs__item--active":j===t}),style:h?{}:{outline:"none"},key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case u:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e),k(e)},onFocus:function(){return T(t)},onClick:function(){T(t),y(!1)},onPointerDown:function(){return y(!1)}},n)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===j}))[0]))}},183:function(e,t,n){"use strict";var a=n(0),r=n.n(a);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);